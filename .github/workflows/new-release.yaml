# Copyright 2024 Zaphiro Technologies
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Publish new release

concurrency:
  group: ${{github.repository}}-new-release
  cancel-in-progress: false

on:
  workflow_dispatch: # Allow manual triggering
  workflow_call:
    inputs:
      tag:
        description: "Tag to be created (when empty, it will be automatically computed)"
        required: false
        type: string
        default: ""
jobs:
  create-new-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/create-github-app-token@v2
        id: generate-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_SECRET }}
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          token: ${{ steps.generate-token.outputs.token }}
          fetch-depth: 0
      - name: "Validate semver"
        if: ${{ inputs.tag != '' }}
        run: |
          regex='^([0-9]+)\.([0-9]+)\.([0-9]+)(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?)?$'

          if [[ "${{ inputs.tag }}" =~ $regex ]]; then
              echo "${{ inputs.tag }} is a valid SemVer."
              echo "NEWTAG=${{ inputs.tag }}" >> $GITHUB_ENV
          else
              echo "${{ inputs.tag }} is NOT a valid SemVer."
              exit 1
          fi
      - name: "Get Previous tag"
        id: previoustag
        if: ${{ inputs.tag == '' }}
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0 # Optional fallback tag to use when no tag can be found
      - name: "Get next minor version"
        id: semvers
        if: ${{ inputs.tag == '' }}
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: "Set tag"
        if: ${{ inputs.tag == '' }}
        run: |
          echo "NEWTAG=${{ steps.semvers.outputs.patch }}" >> $GITHUB_ENV
      - name: "Update version using make"
        run: |
          make release TAG=${{ env.NEWTAG }}
      - name: Commit version changes
        run: |
          git config --global user.name 'Bot'
          git config --global user.email 'bot@zaphiro.ch'
          git commit -am "Automated tag changes [dependabot skip]" || echo "No changes to commit"
      - name: Create New Tag
        run: |
          git tag -a "v${{ env.NEWTAG }}" -m "Release v${{ env.NEWTAG }}"
          git push --follow-tags
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.NEWTAG }}"
